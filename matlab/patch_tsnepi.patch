1c1
< function [Y,loss] = tsne_custom(X,varargin)
---
> function [Y,loss] = tsne(X,varargin)
178,181d177
< tsnepiopt.buildcsb    = 0;
< tsnepiopt.destroycsb  = 1;
< tsnepiopt.computegrad = 2;
< 
262c258
< AlgorithmNames = {'exact','barneshut','tsnepi'};
---
> AlgorithmNames = {'exact','barneshut'};
509,515d504
< % keep early exaggeration as input for CSB
< if strcmpi(algorithm, 'tsnepi')
<   computegrad( tsnepiopt.destroycsb );
<   computegrad( tsnepiopt.buildcsb, uint32(colidx-1)', uint32(cumsum([0 rowcnt]))', ...
<                probMatX' );
< end
< 
539c528
< 
---
>   
552,562d540
<         
<     elseif strcmpi(algorithm,'tsnepi')
< 
<         [dy,Z] = computegrad( tsnepi.computegrad, Y', exaggeration );
<         grad = 4*dy';
<     
<         % using built-in loss function
<         if ( rem(iter,numprint) == 0 )
<             loss = tsnelossmex(Y',colidx,rowcnt,probMatX,Z);
<         end
<         
628,631d605
< % cleanup CSB
< computegrad( tsnepiopt.destroycsb );
< 
<   
